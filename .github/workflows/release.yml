name: "Template release"

on:
  push:
    branches:
      - main
    paths:
          - 'src/**'

jobs:
  release:
    name: "release template file"
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - id: 'checkout'
      uses: 'actions/checkout@v4'

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - id: 'upload-postgresql-script'
      uses: 'google-github-actions/upload-cloud-storage@v2'
      with:
        path: 'src/postgresql_to_bigquery.py'
        destination: 'bucket-prj-dinum-data-templates-66aa'
        gzip: false
        
    - id: 'upload-oracle-script'
      uses: 'google-github-actions/upload-cloud-storage@v2'
      with:
        path: 'src/oracle_to_bigquery.py'
        destination: 'bucket-prj-dinum-data-templates-66aa'
        gzip: false

    - id: 'upload-jira-to-bq'
      uses: 'google-github-actions/upload-cloud-storage@v2'
      with:
        path: 'src/jira_to_bigquery.py'
        destination: 'bucket-prj-dinum-data-templates-66aa'
        gzip: false

    - id: 'upload-oracle-script-dev'
      uses: 'google-github-actions/upload-cloud-storage@v2'
      with:
        path: 'src/jira_to_bigquery_dev.py'
        destination: 'bucket-prj-dinum-data-templates-66aa'
        gzip: false

    # # A implementer
    # - name: Get modified files
    # id: files
    # run: |
    #   # Liste les fichiers modifiés dans src/
    #   files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^src/')
    #   echo "Modified files: $files"
      
    #   # Si des fichiers sont modifiés, les stocke dans une variable d'environnement
    #   if [ -n "$files" ]; then
    #     echo "FILES=$files" >> $GITHUB_ENV
    #   else
    #     echo "No files modified in src/"
    #   fi

    # - name: Upload modified scripts to GCS
    # uses: google-github-actions/upload-cloud-storage@v2
    # with:
    #   bucket: 'your-bucket-name'  # Remplacez par le nom de votre bucket
    #   source: ${{ env.FILES }}    # Utilise les fichiers modifiés
    #   destination: 'your-gcs-destination-path/'  # Remplacez par le chemin de destination dans GCS        